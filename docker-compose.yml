version: '3.8'

services:
  # AIFS Client Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=sqlite:///./aifs_client.db
      - AIFS_SERVER_HOST=aifs-server
      - AIFS_SERVER_PORT=50051
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/data:/app/data
    depends_on:
      - aifs-server
    restart: unless-stopped

  # AIFS Client Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - backend
    restart: unless-stopped

  # AIFS Server (Optional - can be external)
  aifs-server:
    build:
      context: ./local_implementation
      dockerfile: Dockerfile
    ports:
      - "50051:50051"
    volumes:
      - ./local_implementation/data:/app/data
    environment:
      - AIFS_DATA_DIR=/app/data
      - AIFS_LOG_LEVEL=INFO
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

volumes:
  uploads:
  data:
